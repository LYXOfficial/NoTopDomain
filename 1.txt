
写一个python程序，获取windows系统托盘的所有图标信息

import win32gui
import win32api

def get_all_tray_icons():
    # 获取系统托盘窗口句柄
    hwnd = win32gui.FindWindow("Shell_TrayWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "TrayNotifyWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "SysPager", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "ToolbarWindow32", None)

    # 获取托盘图标数量
    count = win32gui.SendMessage(hwnd, win32gui.TB_BUTTONCOUNT, 0, 0)

    # 遍历获取每个图标的信息
    icons_info = []
    for i in range(count):
        info = win32gui.SendMessage(hwnd, win32gui.TB_GETBUTTON, i, 0)
        command, state, image, _ = info
        icons_info.append({
            "command": command,
            "state": state,
            "image": image
        })
    
    return icons_info

if __name__ == "__main__":
    icons_info = get_all_tray_icons()
    for info in icons_info:
        print(info)
请注意，此程序需要使用Win32 API，需要安装pywin32库。可以使用pip install pywin32命令进行安装。

能获取对应的NOTIFYICONDATA吗

当在 Windows 系统中获取系统托盘图标信息时，可以通过以下代码来获取对应的NOTIFYICONDATA：

import win32gui
import win32api
import win32con

def get_all_tray_icons():
    # 获取系统托盘窗口句柄
    hwnd = win32gui.FindWindow("Shell_TrayWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "TrayNotifyWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "SysPager", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "ToolbarWindow32", None)

    # 获取托盘图标数量
    count = win32gui.SendMessage(hwnd, win32gui.TB_BUTTONCOUNT, 0, 0)

    # 遍历获取每个图标的信息
    icons_info = []
    for i in range(count):
        info = win32gui.SendMessage(hwnd, win32gui.TB_GETBUTTON, i, 0)
        command, state, image, _ = info

        # 获取图标的窗口句柄
        hwnd = win32gui.SendMessage(hwnd, win32con.TB_GETITEMRECT, i, 0)
        rect = win32gui.GetWindowRect(hwnd)

        # 获取NOTIFYICONDATA
        nid = win32gui.NOTIFYICONDATA()
        nid.cbSize = win32gui.NOTIFYICONDATA_V2_SIZE
        nid.hWnd = hwnd
        nid.uID = command

        # 获取图标信息
        win32gui.Shell_NotifyIcon(win32gui.NIM_GET, nid)

        icons_info.append({
            "command": command,
            "state": state,
            "image": image,
            "nid": nid
        })
    
    return icons_info

if __name__ == "__main__":
    icons_info = get_all_tray_icons()
    for info in icons_info:
        print(info)
在上述示例中，我们创建了一个 NOTIFYICONDATA 结构体，然后使用 Shell_NotifyIcon 函数获取图标的详细信息。需要注意的是，NOTIFYICONDATA 结构体的大小可能因 Windows 版本而异，建议根据实际情况使用正确的大小。

AttributeError: module 'win32gui' has no attribute 'TB_BUTTONCOUNT'

对不起，我犯了一个错误。在 Python 的 win32gui 模块中没有名称为 TB_BUTTONCOUNT 的属性。下面是修正后的代码：

import win32gui
import win32con

def get_all_tray_icons():
    # 获取系统托盘窗口句柄
    hwnd = win32gui.FindWindow("Shell_TrayWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "TrayNotifyWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "SysPager", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "ToolbarWindow32", None)

    # 获取托盘图标数量
    count = win32gui.SendMessage(hwnd, win32con.TB_BUTTONCOUNT, 0, 0)

    # 遍历获取每个图标的信息
    icons_info = []
    for i in range(count):
        info = win32gui.SendMessage(hwnd, win32con.TB_GETBUTTON, i, 0)
        command, state, image, _ = info

        # 获取图标的窗口句柄
        hwnd = win32gui.SendMessage(hwnd, win32con.TB_GETBUTTON, i, 0)
        rect = win32gui.GetWindowRect(hwnd)

        # 获取NOTIFYICONDATA
        nid = win32gui.NOTIFYICONDATA()
        nid.cbSize = win32gui.NOTIFYICONDATA_V2_SIZE
        nid.hWnd = hwnd
        nid.uID = command

        # 获取图标信息
        win32gui.Shell_NotifyIcon(win32gui.NIM_GET, nid)

        icons_info.append({
            "command": command,
            "state": state,
            "image": image,
            "nid": nid
        })
    
    return icons_info

if __name__ == "__main__":
    icons_info = get_all_tray_icons()
    for info in icons_info:
        print(info)
这个修正后的代码中使用了 win32con.TB_BUTTONCOUNT 来代替 win32gui.TB_BUTTONCOUNT。希望这次能够帮到你。

AttributeError: module 'win32con' has no attribute 'TB_BUTTONCOUNT'

抱歉，我再次弄错了。实际上，Python 的 win32gui 和 win32con 模块中并没有提供直接获取系统托盘图标的方法。获取系统托盘图标的信息需要更加复杂的方法，需要使用 Windows API 来实现。

以下是一个获取系统托盘图标信息的示例代码，使用了 Windows API 中的一些函数和结构体：

import win32api
import win32gui
import win32con
from ctypes import *

class NOTIFYICONDATA(Structure):
    _fields_ = [
        ("cbSize", c_ulong),
        ("hWnd", c_ulong),
        ("uID", c_ulong),
        ("uFlags", c_ulong),
        ("uCallbackMessage", c_ulong),
        ("hIcon", c_ulong),
        ("szTip", c_wchar * 128),
        ("dwState", c_ulong),
        ("dwStateMask", c_ulong),
        ("szInfo", c_wchar * 256),
        ("uTimeout", c_ulong),
        ("szInfoTitle", c_wchar * 64),
        ("dwInfoFlags", c_ulong),
        ("guidItem", c_ulong),
        ("hBalloonIcon", c_ulong)
    ]

def get_all_tray_icons():
    # 获取系统托盘窗口句柄
    hwnd = win32gui.FindWindow("Shell_TrayWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "TrayNotifyWnd", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "SysPager", None)
    hwnd = win32gui.FindWindowEx(hwnd, 0, "ToolbarWindow32", None)

    # 遍历获取每个图标的信息
    icons_info = []
    for i in range(256):
        # 获取图标的窗口句柄
        icon_hwnd = win32gui.SendMessage(hwnd, win32con.TB_GETBUTTON, i, 0)

        if icon_hwnd:
            # 获取图标的信息
            nid = NOTIFYICONDATA()
            nid.cbSize = sizeof(nid)
            nid.hWnd = hwnd
            nid.uID = i
            win32gui.Shell_NotifyIcon(win32gui.NIM_GETINFO, byref(nid))

            icons_info.append({
                "hwnd": icon_hwnd,
                "nid": nid
            })

    return icons_info

if __name__ == "__main__":
    icons_info = get_all_tray_icons()
    for info in icons_info:
        print(info)
请注意，这段代码使用了 Windows API 中的 NOTIFYICONDATA 结构体和 Shell_NotifyIcon 函数来获取系统托盘图标的信息。希望这次提供的代码能够满足你的需求。

与 LLM 对话



